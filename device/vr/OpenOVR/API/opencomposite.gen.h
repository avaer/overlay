#pragma once
// Generated by OpenComposite's Reimpl/generate.py, do not hand modify as it will be overwritten!
namespace ocapi {
	class IVROCSystem {
	public:
		virtual uint64_t GetExtendedButtonStatus() = 0;
	};
	static const char * const IVROCSystem_Version = "IVROCSystem_001";
};
namespace ocapi {
	class OCAPIContext {
	public:
		IVROCSystem* System() {
			CheckClear();
			if(m_System == (void*)0x1)
				return NULL;
			if(!m_System && vr::VR_IsInterfaceVersionValid(IVROCSystem_Version)) {
				vr::EVRInitError eError;
				m_System = (IVROCSystem*) vr::VR_GetGenericInterface(IVROCSystem_Version, &eError);
			}
			if(!m_System) {
				m_System = (IVROCSystem*)0x1;
				return NULL;
			}
			return m_System;
		};
	private:
		void CheckClear() {
			static uint32_t token;
			if(token == vr::VR_GetInitToken()) return;
			token = vr::VR_GetInitToken();
			m_System = nullptr;
		}
		IVROCSystem* m_System = nullptr;
	};
	inline OCAPIContext& _Context() { static OCAPIContext oc; return oc; }
	inline IVROCSystem* OCSystem() { return _Context().System(); }
};
